@page "/products/create"
@inject AppDbContext _context
@inject NavigationManager _navigationManager;

<h1>New Product</h1>

<EditForm Model="_model" OnValidSubmit="@HandleSubmitAsync">
    
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="Title" class="form-label">Title</label>
        <InputText 
            class="form-control" 
            type="text" 
            id="Title" 
            @bind-Value="_model.Title" 
        />
    </div>

    <div class="mb-3">
        <label for="Price" class="form-label">Price</label>
        <InputNumber 
            class="form-control"
            type="number"
            id="Price"
            @bind-Value="_model.Price" 
        />
    </div>

    <div class="mb-3">
        <label for="CategoryId" class="form-label">Category</label>
        <InputSelect
            class="form-control"
            id="CategoryId" 
            @bind-Value="_model.CategoryId"
        >
            @foreach (var category in _categories)
            {
                <option value="@category.Id">
                    @category.Title
                </option>
            }
        </InputSelect>
    </div>

    @if (!string.IsNullOrEmpty(_erroMessage)) {
        <div 
            class="alert alert-danger"
            role="alert"
        >
            @_erroMessage
        </div>
    }

    <button 
        class="btn btn-success"
        type="submit"
    >
        Save
    </button>

</EditForm>

@code {
    Product _model = new();
    List<Category> _categories = new();
    string? _erroMessage = null;

    protected override async Task OnInitializedAsync() {
        _categories = await _context
            .Categories
            .AsNoTracking()
            .ToListAsync();

        _model.CategoryId = _categories.First().Id;
    }

    async Task HandleSubmitAsync() {
        try
        {
            _ = await _context.Products.AddAsync(_model);
            _ = await _context.SaveChangesAsync();

            _navigationManager.NavigateTo("/products");
        }
        catch (Exception)
        {
            _erroMessage = "Falha ao persistir os dados";
        }
    }
}
